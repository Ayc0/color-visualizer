{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-0bd4488aaf89d470.js","node_modules/@lit/reactive-element/src/css-tag.ts","node_modules/@lit/reactive-element/src/reactive-element.ts","node_modules/lit-html/src/lit-html.ts","node_modules/lit-element/src/lit-element.ts","node_modules/@lit/reactive-element/src/decorators/custom-element.ts","node_modules/@lit/reactive-element/src/decorators/property.ts","node_modules/@lit/reactive-element/src/decorators/state.ts","node_modules/@lit/reactive-element/src/decorators/base.ts","node_modules/@lit/reactive-element/src/decorators/query.ts","node_modules/@lit/reactive-element/src/decorators/query-assigned-nodes.ts","node_modules/d3-color/src/define.js","node_modules/d3-color/src/color.js","node_modules/d3-color/src/math.js","node_modules/d3-color/src/lab.js","node_modules/manatea/src/index.ts","src/color-controllers.ts","node_modules/@parcel/runtime-js/lib/runtime-0dd2ea6252b4142b.js","node_modules/@parcel/runtime-js/lib/get-worker-url.js","node_modules/@parcel/runtime-js/lib/bundle-url.js","src/LCHPaint/generate-colors/index.ts","src/LCHPaint/LCHPaint.ts","node_modules/@lit/reactive-element/src/decorators/event-options.ts","src/ColorPicker/ColorSlider.ts","src/manatea-controller.ts","src/ColorPicker/ColorPicker.ts","src/index.ts"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./bundle-manifest').register(JSON.parse(\"{\\\"bmJ2i\\\":\\\"index.5d3d2397.js\\\",\\\"eHaC8\\\":\\\"generate-colors.worker.b6d96521.js\\\"}\"));","/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets =\n  window.ShadowRoot &&\n  (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultFlatArray = CSSResultOrNative[];\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nexport class CSSResult {\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n\n  constructor(cssText: string, safeToken: symbol) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n  }\n\n  // Note, this is a getter so that it's lazy. In practice, this means\n  // stylesheets are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // Note, if `supportsAdoptingStyleSheets` is true then we assume\n    // CSSStyleSheet is constructable.\n    if (supportsAdoptingStyleSheets && this._styleSheet === undefined) {\n      this._styleSheet = new CSSStyleSheet();\n      this._styleSheet.replaceSync(this.cssText);\n    }\n    return this._styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\nconst cssResultCache = new Map<string, CSSResult>();\n\nconst getCSSResult = (cssText: string): CSSResult => {\n  let result = cssResultCache.get(cssText);\n  if (result === undefined) {\n    cssResultCache.set(\n      cssText,\n      (result = new CSSResult(cssText, constructionToken))\n    );\n  }\n  return result;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  if (value instanceof CSSResult) {\n    return value.cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) => {\n  return getCSSResult(typeof value === 'string' ? value : String(value));\n};\n\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResultGroup => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return getCSSResult(cssText);\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: CSSResultFlatArray\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle = supportsAdoptingStyleSheets\n  ? (s: CSSResultOrNative) => s\n  : (s: CSSResultOrNative) =>\n      s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * [[ReactiveElement]].\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n  CSSResultFlatArray,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nif (DEV_MODE) {\n  // TODO(sorvell): Add a link to the docs about using dev v. production mode.\n  console.warn(`Running in dev mode. Do not use in production!`);\n\n  // Issue platform support warning.\n  if (\n    window.ShadyDOM?.inUse &&\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (globalThis as any)['reactiveElementPlatformSupport'] === undefined\n  ) {\n    console.warn(\n      `Shadow DOM is being polyfilled via ShadyDOM but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = {\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      console.warn(\n        `\\`requestUpdate\\` no longer returns a Promise.` +\n          `Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  };\n}\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Function called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Function called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * Map of changed properties with old values. Takes an optional generic\n * interface corresponding to the declared element properties.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = keyof T extends PropertyKey\n  ? Map<keyof T, unknown>\n  : never;\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? '' : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warnings classes.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  extends HTMLElement\n  implements ReactiveControllerHost {\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning kinds for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning kind for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement classes\n   * ReactiveElement.enableWarning.?('migration');\n   *\n   * // Enable for all MyElement only\n   * MyElement.enableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning kind for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement classes\n   * ReactiveElement.disableWarning.?('migration');\n   *\n   * // Disable for all MyElement only\n   * MyElement.disableWarning.?('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this._initializers ??= [];\n    this._initializers.push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: CSSResultFlatArray = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the [[`css`]] tag function or via constructible stylesheets.\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a PropertyDeclaration for the property with the given options.\n   * The property setter calls the property's `hasChanged` property option\n   * or uses a strict identity check to determine whether or not to request\n   * an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   *   class MyElement extends LitElement {\n   *     static getPropertyDescriptor(name, key, options) {\n   *       const defaultDescriptor =\n   *           super.getPropertyDescriptor(name, key, options);\n   *       const setter = defaultDescriptor.set;\n   *       return {\n   *         get: defaultDescriptor.get,\n   *         set(value) {\n   *           setter.call(this, value);\n   *           // custom action.\n   *         },\n   *         configurable: true,\n   *         enumerable: true\n   *       }\n   *     }\n   *   }\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ) {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = ((this as {}) as {[key: string]: unknown})[\n          name as string\n        ];\n        ((this as {}) as {[key: string]: unknown})[key as string] = value;\n        ((this as unknown) as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a PropertyDeclaration via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override `createProperty`.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  protected static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnRemoved = (obj: any, name: string) => {\n        if (obj[name] !== undefined) {\n          console.warn(\n            `\\`${name}\\` is implemented. It ` +\n              `has been removed from this version of ReactiveElement.` +\n              ` See the changelog at https://github.com/lit/lit/blob/main/packages/reactive-element/CHANGELOG.md`\n          );\n        }\n      };\n      [`initialize`, `requestUpdateInternal`, `_getUpdateComplete`].forEach(\n        (name: string) =>\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          warnRemoved(this.prototype as any, name)\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(styles?: CSSResultGroup): CSSResultFlatArray {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // TODO(sorvell): casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  private __pendingConnectionPromise: Promise<void> | undefined = undefined;\n  private __enableConnection: (() => void) | undefined = undefined;\n\n  /**\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this._initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   *\n   * @internal\n   */\n  _initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (this as {\n        renderRoot: Element | DocumentFragment;\n      }).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n    // If we were disconnected, re-enable updating by resolving the pending\n    // connection promise\n    if (this.__enableConnection) {\n      this.__enableConnection();\n      this.__pendingConnectionPromise = this.__enableConnection = undefined;\n    }\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n    this.__pendingConnectionPromise = new Promise(\n      (r) => (this.__enableConnection = r)\n    );\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (this\n      .constructor as typeof ReactiveElement).__attributeNameForProperty(\n      name,\n      options\n    );\n    if (attr !== undefined && options.reflect === true) {\n      const toAttribute =\n        (options.converter as ComplexAttributeConverter)?.toAttribute ??\n        defaultConverter.toAttribute;\n      const attrValue = toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        console.warn(\n          `The attribute value for the ` +\n            `${name as string} property is undefined. The attribute will be ` +\n            `removed, but in the previous version of ReactiveElement, the ` +\n            `attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter = options.converter;\n      const fromAttribute =\n        (converter as ComplexAttributeConverter)?.fromAttribute ??\n        (typeof converter === 'function'\n          ? (converter as (value: string | null, type?: unknown) => unknown)\n          : null) ??\n        defaultConverter.fromAttribute;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this[propName as keyof this] = fromAttribute!(value, options.type) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE ? ((requestUpdateThenable as unknown) as void) : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n      // If we were disconnected, wait until re-connected to flush an update\n      while (this.__pendingConnectionPromise) {\n        await this.__pendingConnectionPromise;\n      }\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.performUpdate();\n    // If `performUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * You can override this method to change the timing of updates. If this\n   * method is overridden, `super.performUpdate()` must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```\n   * protected async performUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.performUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n          (_v, p) => {\n            if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n              shadowedProperties.push(p as string);\n            }\n          }\n        );\n        if (shadowedProperties.length) {\n          // TODO(sorvell): Link to docs explanation of this issue.\n          console.warn(\n            `The following properties will not trigger updates as expected ` +\n              `because they are set using class fields: ` +\n              `${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. To fix this issue, ` +\n              `either initialize properties in the constructor or adjust ` +\n              `your compiler settings; for example, for TypeScript set ` +\n              `\\`useDefineForClassFields: false\\` in your \\`tsconfig.json\\`.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * @category updates\n   */\n  willUpdate(_changedProperties: PropertyValues) {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      console.warn(\n        `An update was requested (generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that indicates if the update resolved\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   *   class MyElement extends LitElement {\n   *     async getUpdateComplete() {\n   *       await super.getUpdateComplete();\n   *       await this._myChild.updateComplete;\n   *     }\n   *   }\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['reactiveElementPlatformSupport']?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\ndeclare global {\n  interface Window {\n    reactiveElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n// TODO(justinfagnani): inject version number at build time\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n((globalThis as any)['reactiveElementVersions'] ??= []).push('1.0.0-rc.2');\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\n\nif (DEV_MODE) {\n  console.warn('lit-html is in dev mode. Not recommended for production!');\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  window.ShadyDOM?.inUse &&\n  window.ShadyDOM?.noPatch === true\n    ? window.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = ((globalThis as unknown) as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d = document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = (v = '') => d.createComment(v);\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions.\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  _$litType$: T;\n  // TODO (justinfagnani): consider shorter names, like `s` and `v`. This is a\n  // semi-public API though. We can't just let Terser rename them for us,\n  // because we need TemplateResults to work between compatible versions of\n  // lit-html.\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  _$litType$: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  h: TrustedHTML;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag = <T extends ResultType>(_$litType$: T) => (\n  strings: TemplateStringsArray,\n  ...values: unknown[]\n): TemplateResult<T> => ({\n  _$litType$,\n  strings,\n  values,\n});\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n * @param value\n * @param container\n * @param options\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): ChildPart => {\n  const partOwnerNode = options?.renderBefore ?? container;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)._$litPart$;\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)._$litPart$ = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options\n    );\n  }\n  part._$setValue(value);\n  return part;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse = _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment comment markers denoting the\n * `ChildPart`s and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          // dynamic tag name\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [\n    policy !== undefined\n      ? policy.createHTML(htmlResult)\n      : ((htmlResult as unknown) as TrustedHTML),\n    attrNames,\n  ];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n  /** @internal */\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    {strings, _$litType$: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _neccessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? ((trustedTypes.emptyScript as unknown) as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized in some browsers (TODO: check)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            // TODO (justinfagnani): consider whether it's even worth it to\n            // make bindings in comments work\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n  }\n\n  // Overridden via `litHtmlPlatformSupport` to provide platform support.\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = (html as unknown) as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : (value as DirectiveResult)._$litDirective$;\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    currentDirective?._$setDirectiveConnected?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[\n        attributeIndex\n      ] = currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance {\n  /** @internal */\n  _$template: Template;\n  /** @internal */\n  _parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._parts) {\n      if (part !== undefined) {\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  /** @internal */\n  readonly ctor: typeof AttributePart;\n  /** @internal */\n  readonly strings: ReadonlyArray<string>;\n};\ntype NodeTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | NodeTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$setChildPartConnected?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the connection state for any `AsyncDirectives` contained\n   * within this part and runs their `disconnected` or `reconnected`, according\n   * to the `isConnected` argument.\n   */\n  setConnected(isConnected: boolean) {\n    this._$setChildPartConnected?.(isConnected);\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    return wrap(this._$startNode).parentNode!;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n    } else if ((value as TemplateResult)._$litType$ !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T, ref = this._$endNode) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(node, ref);\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          this._insert(\n            new Text(\n              '/* lit-html will not write ' +\n                'TemplateResults to scripts and styles */'\n            )\n          );\n          return;\n        }\n      }\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    const node = wrap(this._$startNode).nextSibling;\n    // TODO(justinfagnani): Can we just check if this._$committedValue is primitive?\n    if (\n      node !== null &&\n      node.nodeType === 3 /* Node.TEXT_NODE */ &&\n      (this._$endNode === null\n        ? wrap(node).nextSibling === null\n        : node === wrap(this._$endNode).previousSibling)\n    ) {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      // If we only have a single text node between the markers, we can just\n      // set its value, rather than replacing it.\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = document.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its contentx.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    const {values, _$litType$} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof _$litType$ === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (_$litType$.el === undefined &&\n            (_$litType$.el = Template.createElement(\n              _$litType$.h,\n              this.options\n            )),\n          _$litType$);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      instance._update(values);\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPlatformSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$setChildPartConnected?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n}\n\nexport type {AttributePart};\nclass AttributePart {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _setDirectiveConnected?: (\n    directive: Directive | undefined,\n    isConnected: boolean,\n    removeFromParent?: boolean\n  ) => void = undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(nothing);\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  readonly type = PROPERTY_PART;\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(this.name, '');\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  readonly type = EVENT_PART;\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  _$setValue(newListener: unknown, directiveParent: DirectiveParent = this) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      // TODO (justinfagnani): do we need to default to this.element?\n      // It'll always be the same as `e.currentTarget`.\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  /** @internal */\n  _setDirectiveConnected?: (\n    directive: Directive | undefined,\n    isConnected: boolean,\n    removeFromParent?: boolean\n  ) => void = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  _$setValue(value: unknown): void {\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _Σ object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _Σ = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in hydrate\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  // Used in tests and private-ssr-support\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['litHtmlPlatformSupport']?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n((globalThis as any)['litHtmlVersions'] ??= []).push('2.0.0-rc.3');\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`ReactiveElement`]] and adds lit-html templating.\n * The `ReactiveElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, ChildPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\ndeclare global {\n  interface Window {\n    litElementVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n((globalThis as any)['litElementVersions'] ??= []).push('3.0.0-rc.2');\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static ['finalized'] = true;\n\n  static _$litElement$ = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: ChildPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  // TODO(kschaaf): Consider debouncing directive disconnection so element moves\n  // do not thrash directive callbacks\n  // https://github.com/lit/lit/issues/1457\n  /**\n   * @category lifecycle\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['litElementHydrateSupport']?.({LitElement});\n\n// Apply polyfills if available\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(globalThis as any)['litElementPlatformSupport']?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const warnRemoved = (obj: any, name: string) => {\n      if (obj[name] !== undefined) {\n        console.warn(\n          `\\`${name}\\` is implemented. It ` +\n            `has been removed from this version of LitElement. `\n          // TODO(sorvell): add link to changelog when location has stabilized.\n          // + See the changelog at https://github.com/lit/lit/blob/main/packages/lit-element/CHANGELOG.md`\n        );\n      }\n    };\n    [`render`, `getStyles`].forEach((name: string) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      warnRemoved(this as any, name)\n    );\n    [`adoptStyles`].forEach((name: string) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      warnRemoved(this.prototype as any, name)\n    );\n    return true;\n  };\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _Φ object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _Φ = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {Constructor, ClassDescriptor} from './base.js';\n\nconst legacyCustomElement = (\n  tagName: string,\n  clazz: Constructor<HTMLElement>\n) => {\n  window.customElements.define(tagName, clazz);\n  // Cast as any because TS doesn't recognize the return type as being a\n  // subtype of the decorated class when clazz is typed as\n  // `Constructor<HTMLElement>` for some reason.\n  // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n  // applied to elements however.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return clazz as any;\n};\n\nconst standardCustomElement = (\n  tagName: string,\n  descriptor: ClassDescriptor\n) => {\n  const {kind, elements} = descriptor;\n  return {\n    kind,\n    elements,\n    // This callback is called once the class is otherwise fully defined\n    finisher(clazz: Constructor<HTMLElement>) {\n      window.customElements.define(tagName, clazz);\n    },\n  };\n};\n\n/**\n * Class decorator factory that defines the decorated class as a custom element.\n *\n * ```\n * @customElement('my-element')\n * class MyElement extends LitElement {\n *   render() {\n *     return html``;\n *   }\n * }\n * ```\n * @category Decorator\n * @param tagName The tag name of the custom element to define.\n */\nexport const customElement = (tagName: string) => (\n  classOrDescriptor: Constructor<HTMLElement> | ClassDescriptor\n) =>\n  typeof classOrDescriptor === 'function'\n    ? legacyCustomElement(tagName, classOrDescriptor)\n    : standardCustomElement(tagName, classOrDescriptor);\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A [[`PropertyDeclaration`]] may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the [[`state`]] decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the [[`state`]] decorator should be used. When needed,\n * state properties can be initialized via public properties to facilitate\n * complex interactions.\n *\n * @example\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n    attribute: false,\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\n\nexport type Constructor<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  new (...args: any[]): T;\n};\n\n// From the TC39 Decorators proposal\nexport interface ClassDescriptor {\n  kind: 'class';\n  elements: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n}\n\n// From the TC39 Decorators proposal\nexport interface ClassElement {\n  kind: 'field' | 'method';\n  key: PropertyKey;\n  placement: 'static' | 'prototype' | 'own';\n  initializer?: Function;\n  extras?: ClassElement[];\n  finisher?: <T>(clazz: Constructor<T>) => void | Constructor<T>;\n  descriptor?: PropertyDescriptor;\n}\n\nexport const legacyPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  proto: Object,\n  name: PropertyKey\n) => {\n  Object.defineProperty(proto, name, descriptor);\n};\n\nexport const standardPrototypeMethod = (\n  descriptor: PropertyDescriptor,\n  element: ClassElement\n) => ({\n  kind: 'method',\n  placement: 'prototype',\n  key: element.key,\n  descriptor,\n});\n\n/**\n * Helper for decorating a property that is compatible with both TypeScript\n * and Babel decorators. The optional `finisher` can be used to perform work on\n * the class. The optional `descriptor` should return a PropertyDescriptor\n * to install for the given property.\n *\n * @param finisher {function} Optional finisher method; receives the element\n * constructor and property key as arguments and has no return value.\n * @param descriptor {function} Optional descriptor method; receives the\n * property key as an argument and returns a property descriptor to define for\n * the given property.\n * @returns {ClassElement|void}\n */\nexport const decorateProperty = ({\n  finisher,\n  descriptor,\n}: {\n  finisher?:\n    | ((ctor: typeof ReactiveElement, property: PropertyKey) => void)\n    | null;\n  descriptor?: (property: PropertyKey) => PropertyDescriptor;\n}) => (\n  protoOrDescriptor: ReactiveElement | ClassElement,\n  name?: PropertyKey\n  // Note TypeScript requires the return type to be `void|any`\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): void | any => {\n  // TypeScript / Babel legacy mode\n  if (name !== undefined) {\n    const ctor = (protoOrDescriptor as ReactiveElement)\n      .constructor as typeof ReactiveElement;\n    if (descriptor !== undefined) {\n      Object.defineProperty(protoOrDescriptor, name, descriptor(name));\n    }\n    finisher?.(ctor, name!);\n    // Babel standard mode\n  } else {\n    // Note, the @property decorator saves `key` as `originalKey`\n    // so try to use it here.\n    const key =\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (protoOrDescriptor as any).originalKey ??\n      (protoOrDescriptor as ClassElement).key;\n    const info: ClassElement =\n      descriptor != undefined\n        ? {\n            kind: 'method',\n            placement: 'prototype',\n            key,\n            descriptor: descriptor((protoOrDescriptor as ClassElement).key),\n          }\n        : {...(protoOrDescriptor as ClassElement), key};\n    if (finisher != undefined) {\n      info.finisher = function <ReactiveElement>(\n        ctor: Constructor<ReactiveElement>\n      ) {\n        finisher((ctor as unknown) as typeof ReactiveElement, key);\n      };\n    }\n    return info;\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * A property decorator that converts a class property into a getter that\n * executes a querySelector on the element's renderRoot.\n *\n * @param selector A DOMString containing one or more selectors to match.\n * @param cache An optional boolean which when true performs the DOM query only\n *     once and caches the result.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n *\n * @example\n *\n * ```ts\n * class MyElement {\n *   @query('#first')\n *   first;\n *\n *   render() {\n *     return html`\n *       <div id=\"first\"></div>\n *       <div id=\"second\"></div>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function query(selector: string, cache?: boolean) {\n  return decorateProperty({\n    descriptor: (name: PropertyKey) => {\n      const descriptor = {\n        get(this: ReactiveElement) {\n          return this.renderRoot?.querySelector(selector);\n        },\n        enumerable: true,\n        configurable: true,\n      };\n      if (cache) {\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        descriptor.get = function (this: ReactiveElement) {\n          if (\n            ((this as unknown) as {[key: string]: Element | null})[\n              key as string\n            ] === undefined\n          ) {\n            ((this as unknown) as {[key: string]: Element | null})[\n              key as string\n            ] = this.renderRoot?.querySelector(selector);\n          }\n          return ((this as unknown) as {[key: string]: Element | null})[\n            key as string\n          ];\n        };\n      }\n      return descriptor;\n    },\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n// TODO(sorvell): Remove when https://github.com/webcomponents/polyfills/issues/397 is addressed.\n// x-browser support for matches\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst ElementProto = Element.prototype as any;\nconst legacyMatches =\n  ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedNodes` of the given named `slot`. Note, the type of\n * this property should be annotated as `NodeListOf<HTMLElement>`.\n *\n * @param slotName A string name of the slot.\n * @param flatten A boolean which when true flattens the assigned nodes,\n *     meaning any assigned nodes that are slot elements are replaced with their\n *     assigned nodes.\n * @param selector A string which filters the results to elements that match\n *     the given css selector.\n *\n * * @example\n * ```ts\n * class MyElement {\n *   @queryAssignedNodes('list', true, '.item')\n *   listItems;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *     `;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function queryAssignedNodes(\n  slotName = '',\n  flatten = false,\n  selector = ''\n) {\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${\n          slotName ? `[name=${slotName}]` : ':not([name])'\n        }`;\n        const slot = this.renderRoot?.querySelector(slotSelector);\n        let nodes = (slot as HTMLSlotElement)?.assignedNodes({flatten});\n        if (nodes && selector) {\n          nodes = nodes.filter(\n            (node) =>\n              node.nodeType === Node.ELEMENT_NODE &&\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              ((node as any).matches\n                ? (node as Element).matches(selector)\n                : legacyMatches.call(node as Element, selector))\n          );\n        }\n        return nodes;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export const radians = Math.PI / 180;\nexport const degrees = 180 / Math.PI;\n","import define, {extend} from \"./define.js\";\nimport {Color, rgbConvert, Rgb} from \"./color.js\";\nimport {degrees, radians} from \"./math.js\";\n\n// https://observablehq.com/@mbostock/lab-and-rgb\nconst K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) return hcl2lab(o);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * degrees;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\nfunction hcl2lab(o) {\n  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n  var h = o.h * radians;\n  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return hcl2lab(this).rgb();\n  }\n}));\n","export type Tea =\n  | null\n  | string\n  | number\n  | undefined\n  | boolean\n  | symbol\n  | Date\n  | any[]\n  | object\n  | Map<any, any>\n  | Set<any>;\n\ntype Handler<T extends Tea> = (tea: T, context: Context) => void;\nexport interface Server {\n  (): boolean;\n  listening: boolean;\n}\n\ntype Order<T extends Tea> = ((tea: T) => T | Promise<T>) | T;\n\nexport interface Cup<T extends Tea> {\n  (): T;\n  (order: Order<T>, context?: Context): Promise<T>;\n  on: (fn: Handler<T>) => Server;\n  clear: () => void;\n}\n\nexport type Context = WeakSet<Cup<any>>;\n\nexport function orderCup<T extends Tea>(\n  firstTea: T,\n  flavoring: (tea: T) => T = t => t,\n): Cup<T> {\n  let handlers = new Set<Handler<T>>();\n  let flavoredTea = flavoring(firstTea);\n\n  let isPreviousCancelled = { cancelled: false };\n\n  const setTea = (teaRefill: T, context: Context) => {\n    const flavoredTeaRefill = flavoring(teaRefill);\n    if (\n      flavoredTea === flavoredTeaRefill ||\n      (Number.isNaN(flavoredTea as any) &&\n        Number.isNaN(flavoredTeaRefill as any))\n    ) {\n      return;\n    }\n    isPreviousCancelled.cancelled = true;\n    const isCancelled = { cancelled: false };\n    isPreviousCancelled = isCancelled;\n    flavoredTea = flavoredTeaRefill;\n    handlers.forEach(handler => {\n      if (isCancelled.cancelled) {\n        return;\n      }\n      handler(flavoredTea, context);\n    });\n  };\n\n  function cup(): T;\n  function cup(order: Order<T>, context?: Context): Promise<T>;\n  function cup(order?: Order<T>, context: Context = new WeakSet()) {\n    if (arguments.length === 0) {\n      return flavoredTea;\n    }\n    return Promise.resolve(\n      typeof order === 'function' ? order(flavoredTea) : order,\n    ).then(teaRefill => {\n      if (context.has(cup)) {\n        return flavoredTea;\n      }\n      context.add(cup);\n      setTea(teaRefill, context);\n      return flavoredTea;\n    });\n  }\n\n  cup.on = (fn: Handler<T>) => {\n    handlers.add(fn);\n    const server = () => handlers.delete(fn);\n    Object.defineProperty(server, 'listening', {\n      get: () => handlers.has(fn),\n    });\n    return server as Server;\n  };\n\n  cup.clear = () => handlers.clear();\n\n  return cup;\n}\n","import { orderCup } from \"manatea\";\nimport { lch, lab, rgb, hsl, } from \"d3-color\";\nconst initialLCHColor = lch(57, 110, 283.8);\nconst initialLabColor = lab(initialLCHColor);\nconst initialRGBColor = rgb(initialLCHColor.formatHex());\nconst initialHSLColor = hsl(initialLCHColor.formatHex());\nexport const lchCup = orderCup(initialLCHColor, (tea) => {\n    tea.l = clamp(0, tea.l, 100);\n    tea.c = clamp(0, tea.c, 132);\n    tea.h = clamp(0, tea.h, 360);\n    return tea;\n});\nexport const labCup = orderCup(initialLabColor, (tea) => {\n    tea.l = clamp(0, tea.l, 100);\n    tea.a = clamp(-128, tea.a, 127);\n    tea.b = clamp(-128, tea.b, 127);\n    return tea;\n});\nexport const rgbCup = orderCup(initialRGBColor, (tea) => {\n    tea.r = clamp(0, tea.r, 255);\n    tea.g = clamp(0, tea.g, 255);\n    tea.b = clamp(0, tea.b, 255);\n    return tea;\n});\nexport const hslCup = orderCup(initialHSLColor, (tea) => {\n    tea.h = clamp(0, tea.h, 360);\n    tea.s = clamp(0, tea.s, 1);\n    tea.l = clamp(0, tea.l, 1);\n    return tea;\n});\nexport const luminanceCup = orderCup(initialLCHColor.l, (tea) => \n// 0 -> 100\nclamp(0, tea, 100));\nexport const chromaCup = orderCup(initialLCHColor.c, (tea) => \n// 0 -> 132\nclamp(0, tea, 132));\nexport const hueCup = orderCup(initialLCHColor.h, (tea) => \n// 0 -> 360\nclamp(0, tea, 360));\nexport const aCup = orderCup(initialLabColor.a, (tea) => \n// -128 -> 127\nclamp(-128, tea, 127));\nexport const bCup = orderCup(initialLabColor.b, (tea) => \n// -128 -> 127\nclamp(-128, tea, 127));\nexport const redCup = orderCup(initialRGBColor.r, (tea) => \n// 0 -> 255\nclamp(0, tea, 255));\nexport const greenCup = orderCup(initialRGBColor.g, (tea) => \n// 0 -> 255\nclamp(0, tea, 255));\nexport const blueCup = orderCup(initialRGBColor.b, (tea) => \n// 0 -> 255\nclamp(0, tea, 255));\nexport const fakeHueCup = orderCup(initialHSLColor.h, (tea) => \n// 0 -> 360\nclamp(0, tea, 360));\nexport const saturationCup = orderCup(initialHSLColor.s, (tea) => \n// 0 -> 1\nclamp(0, tea, 1));\nexport const lightnessCup = orderCup(initialHSLColor.l, (tea) => \n// 0 -> 1\nclamp(0, tea, 1));\nlchCup.on((newLch, context) => {\n    luminanceCup(newLch.l, context);\n    chromaCup(newLch.c, context);\n    hueCup(newLch.h, context);\n    labCup((prevLab) => genLab(prevLab, newLch), context);\n    rgbCup((prevRGB) => genRGB(prevRGB, newLch), context);\n    hslCup((prevHSL) => genHSL(prevHSL, newLch), context);\n});\nlabCup.on((newLab, context) => {\n    luminanceCup(newLab.l, context);\n    aCup(newLab.a, context);\n    bCup(newLab.b, context);\n    lchCup((prevLCH) => genLCH(prevLCH, newLab), context);\n    rgbCup((prevRGB) => genRGB(prevRGB, newLab), context);\n    hslCup((prevHSL) => genHSL(prevHSL, newLab), context);\n});\nrgbCup.on((newRGB, context) => {\n    redCup(newRGB.r, context);\n    blueCup(newRGB.b, context);\n    greenCup(newRGB.g, context);\n    lchCup((prevLCH) => genLCH(prevLCH, newRGB), context);\n    labCup((prevLab) => genLab(prevLab, newRGB), context);\n    hslCup((prevHSL) => genHSL(prevHSL, newRGB), context);\n});\nhslCup.on((newHSL, context) => {\n    fakeHueCup(newHSL.h, context);\n    saturationCup(newHSL.s, context);\n    lightnessCup(newHSL.l, context);\n    lchCup((prevLCH) => genLCH(prevLCH, newHSL), context);\n    labCup((prevLab) => genLab(prevLab, newHSL), context);\n    rgbCup((prevRGB) => genRGB(prevRGB, newHSL), context);\n});\nluminanceCup.on((newLuminance, context) => {\n    lchCup((prevLCH) => {\n        const newLCH = prevLCH.copy();\n        newLCH.l = newLuminance;\n        return newLCH;\n    }, context);\n    labCup((prevLab) => {\n        const newLab = prevLab.copy();\n        newLab.l = newLuminance;\n        return newLab;\n    }, context);\n});\nchromaCup.on((newChroma, context) => {\n    lchCup((prevLCH) => {\n        const newLCH = prevLCH.copy();\n        newLCH.c = newChroma;\n        return newLCH;\n    }, context);\n});\nhueCup.on((newHue, context) => {\n    lchCup((prevLCH) => {\n        const newLCH = prevLCH.copy();\n        newLCH.h = newHue;\n        return newLCH;\n    }, context);\n});\naCup.on((newA, context) => {\n    labCup((prevLab) => {\n        const newLab = prevLab.copy();\n        newLab.a = newA;\n        return newLab;\n    }, context);\n});\nbCup.on((newB, context) => {\n    labCup((prevLab) => {\n        const newLab = prevLab.copy();\n        newLab.b = newB;\n        return newLab;\n    }, context);\n});\nredCup.on((newRed, context) => {\n    rgbCup((prevRGB) => {\n        const newRGB = prevRGB.copy();\n        newRGB.r = newRed;\n        return newRGB;\n    }, context);\n});\ngreenCup.on((newGreen, context) => {\n    rgbCup((prevRGB) => {\n        const newRGB = prevRGB.copy();\n        newRGB.g = newGreen;\n        return newRGB;\n    }, context);\n});\nblueCup.on((newBlue, context) => {\n    rgbCup((prevRGB) => {\n        const newRGB = prevRGB.copy();\n        newRGB.b = newBlue;\n        return newRGB;\n    }, context);\n});\nfakeHueCup.on((newHue, context) => {\n    hslCup((prevHSL) => {\n        const newHSL = prevHSL.copy();\n        newHSL.h = newHue;\n        return newHSL;\n    }, context);\n});\nsaturationCup.on((newSaturation, context) => {\n    hslCup((prevHSL) => {\n        const newHSL = prevHSL.copy();\n        newHSL.s = newSaturation;\n        return newHSL;\n    }, context);\n});\nlightnessCup.on((newLightness, context) => {\n    hslCup((prevHSL) => {\n        const newHSL = prevHSL.copy();\n        newHSL.l = newLightness;\n        return newHSL;\n    }, context);\n});\nfunction clamp(min, number, max) {\n    return Math.min(max, Math.max(min, number || 0));\n}\nfunction genLCH(previousLCH, newColor) {\n    const newLCH = lch(newColor);\n    if (newLCH.l !== previousLCH.l ||\n        newLCH.c !== previousLCH.c ||\n        newLCH.h !== previousLCH.h) {\n        return newLCH;\n    }\n    return previousLCH;\n}\nfunction genLab(previousLab, newColor) {\n    const newLab = lab(newColor);\n    if (newLab.l !== previousLab.l ||\n        newLab.a !== previousLab.a ||\n        newLab.b !== previousLab.b) {\n        return newLab;\n    }\n    return previousLab;\n}\nfunction genRGB(previousRGB, newColor) {\n    const newRGB = rgb(newColor.formatHex());\n    if (newRGB.r !== previousRGB.r ||\n        newRGB.g !== previousRGB.g ||\n        newRGB.b !== previousRGB.b) {\n        return newRGB;\n    }\n    return previousRGB;\n}\nfunction genHSL(previousHSL, newColor) {\n    const newHSL = hsl(newColor.formatHex());\n    if (newHSL.h !== previousHSL.h ||\n        newHSL.s !== previousHSL.s ||\n        newHSL.l !== previousHSL.l) {\n        return newHSL;\n    }\n    return previousHSL;\n}\n","let workerURL = require('./get-worker-url');\nlet bundleURL = require('./bundle-url');\nlet url = bundleURL.getBundleURL() + require('./bundle-manifest').resolve(\"eHaC8\");module.exports = workerURL(url, bundleURL.getOrigin(url), true);","\"use strict\";\n\n/* global self, Blob */\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    let source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","\"use strict\";\n\n/* globals document:readonly */\nvar bundleURL = null;\n\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  let matches = ('' + url).match(/(https?|file|ftp):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","const getGenerateColorsWorker = () => new Worker(new URL(\"./generate-colors.worker\", import.meta.url), {\n    type: \"module\",\n});\nexport const createGenerateColors = () => {\n    let prevWorker;\n    return (hue, width, height) => {\n        const worker = getGenerateColorsWorker();\n        if (prevWorker) {\n            prevWorker.terminate();\n        }\n        prevWorker = worker;\n        return new Promise((res) => {\n            worker.onmessage = (event) => {\n                res(event.data.slice());\n            };\n            worker.postMessage([hue, width, height]);\n        });\n    };\n};\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css } from \"lit\";\nimport { customElement, property, eventOptions } from \"lit/decorators.js\";\nimport { query } from \"lit/decorators/query.js\";\nimport { lch } from \"d3-color\";\nimport { lchCup, hueCup } from \"../color-controllers\";\nimport { createGenerateColors } from \"./generate-colors\";\nlet LCHPaint = class LCHPaint extends LitElement {\n    constructor() {\n        super();\n        this.width = 500;\n        this.height = 300;\n        this.isPressed = false;\n        this.generateColors = createGenerateColors();\n        this.updateMarkerPosition = () => {\n            const marker = this.marker;\n            const canvas = this.canvas;\n            if (!marker || !canvas) {\n                return;\n            }\n            const rect = canvas.getBoundingClientRect();\n            const x = Math.floor((lchCup().c / 132) * rect.width);\n            const y = Math.floor((1 - lchCup().l / 100) * rect.height);\n            marker.style.cssText = `transform: translate(calc(${x}px - 50%), calc(${y}px - 50%))`;\n        };\n        this.updateCanvasColors = () => {\n            const canvas = this.canvas;\n            if (!canvas) {\n                return;\n            }\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) {\n                return;\n            }\n            this.generateColors(lchCup().h, this.width, this.height).then((colorArray) => {\n                const imageData = new ImageData(colorArray, this.width, this.height);\n                ctx.putImageData(imageData, 0, 0);\n            });\n        };\n        hueCup.on(() => this.updateCanvasColors());\n        lchCup.on(() => this.updateMarkerPosition());\n    }\n    onPositionChange(event) {\n        const canvas = this.canvas;\n        if (!canvas || !this.isPressed) {\n            return;\n        }\n        const rect = canvas.getBoundingClientRect();\n        const x = Math.min(Math.max(event.clientX - rect.x, 0), rect.width);\n        const y = Math.min(Math.max(event.clientY - rect.y, 0), rect.height);\n        const newColor = lch(Math.floor((1 - y / rect.height) * 100), Math.floor((x / rect.width) * 132), lchCup().h);\n        lchCup(newColor);\n    }\n    firstUpdated() {\n        this.updateMarkerPosition();\n    }\n    updated(changed) {\n        if (changed.has(\"width\") || changed.has(\"height\")) {\n            this.updateCanvasColors();\n        }\n    }\n    render() {\n        return html `\n      <div class=\"wrapper\">\n        <canvas\n          @pointerdown=${(event) => {\n            // If we were pressing on the canvas and the mouse moved out of the canvas, it’ll keep the canvas focused\n            event.currentTarget.setPointerCapture(event.pointerId);\n            this.isPressed = true;\n            this.onPositionChange(event);\n        }}\n          @pointermove=${this.onPositionChange}\n          @pointerup=${(event) => {\n            // On pointer up, we can release the pointer\n            event.currentTarget.releasePointerCapture(event.pointerId);\n            this.isPressed = false;\n        }}\n          width=\"${this.width}px\"\n          height=\"${this.height}px\"\n        ></canvas>\n        <div class=\"marker\"></div>\n      </div>\n    `;\n    }\n};\nLCHPaint.styles = css `\n    :host canvas {\n      border-radius: 5px;\n      border: 1px solid grey;\n      max-width: calc(100vw - 4em);\n      /* Avoid making the page scroll on mobile when we are pressing on it */\n      touch-action: none;\n    }\n\n    :host .wrapper {\n      position: relative;\n    }\n\n    :host .marker {\n      position: absolute;\n      top: 0px;\n      left: 0px;\n      pointer-events: none;\n      width: 6px;\n      height: 6px;\n      border-radius: 50%;\n      border: 1px solid var(--contrast);\n      z-index: 1;\n    }\n  `;\n__decorate([\n    property({ type: Number })\n], LCHPaint.prototype, \"width\", void 0);\n__decorate([\n    property({ type: Number })\n], LCHPaint.prototype, \"height\", void 0);\n__decorate([\n    query(\"canvas\")\n], LCHPaint.prototype, \"canvas\", void 0);\n__decorate([\n    query(\".marker\")\n], LCHPaint.prototype, \"marker\", void 0);\n__decorate([\n    eventOptions({ passive: true })\n], LCHPaint.prototype, \"onPositionChange\", null);\nLCHPaint = __decorate([\n    customElement(\"lch-paint\")\n], LCHPaint);\nexport { LCHPaint };\n","/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {ReactiveElement} from '../reactive-element.js';\nimport {decorateProperty} from './base.js';\n\n/**\n * Adds event listener options to a method used as an event listener in a\n * lit-html template.\n *\n * @param options An object that specifies event listener options as accepted by\n * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n *\n * Current browsers support the `capture`, `passive`, and `once` options. See:\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n *\n * @example\n * ```ts\n * class MyElement {\n *   clicked = false;\n *\n *   render() {\n *     return html`\n *       <div @click=${this._onClick}`>\n *         <button></button>\n *       </div>\n *     `;\n *   }\n *\n *   @eventOptions({capture: true})\n *   _onClick(e) {\n *     this.clicked = true;\n *   }\n * }\n * ```\n * @category Decorator\n */\nexport function eventOptions(options: AddEventListenerOptions) {\n  return decorateProperty({\n    finisher: (ctor: typeof ReactiveElement, name: PropertyKey) => {\n      Object.assign(ctor.prototype[name as keyof ReactiveElement], options);\n    },\n  });\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport { rgb } from \"d3-color\";\nconst height = 20;\nconst offset = 1;\nconst borderWidth = 1;\nconst borderColor = css `var(--contrast)`;\nconst thumbWidth = 14;\nconst thumbStyles = css `\n  width: ${thumbWidth}px;\n  height: ${height + offset * 2}px;\n  background: #00000000;\n  box-shadow: 0 0 0 ${borderWidth}px var(--black),\n    inset 0 0 0 ${borderWidth}px var(--white);\n  border-radius: 3px;\n  cursor: pointer;\n`;\nconst trackBackground = css `var(--track-background, #9e9e9e)`;\nconst trackBackgroundHover = css `var(--track-background-hover, #bbbbbb)`;\nconst trackBackgroundFocus = css `var(--track-background-focus, #cbcbcb)`;\nconst trackStyles = css `\n  background: ${trackBackground};\n  background-size: 100% 100%;\n  background-repeat: no-repeat;\n  box-shadow: 0 0 0 ${borderWidth}px ${borderColor};\n  border-radius: 3px;\n  width: 100%;\n  height: ${height}px;\n  cursor: pointer;\n`;\nlet ColorSlider = class ColorSlider extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.min = 0;\n        this.max = 100;\n        this.step = 1;\n        this.referenceColor = rgb(0, 0, 0);\n        this.valueToModify = \"h\";\n        this.getBackgroundRange = () => {\n            clearTimeout(this.throttleId);\n            const color = this.referenceColor.copy();\n            const colorToCompare = { ...color };\n            delete colorToCompare[this.valueToModify];\n            const stringColorToCompare = JSON.stringify(colorToCompare);\n            if (this.prevBackgroundRange) {\n                // If the color hasn't changed, no need to re-compute\n                if (this.prevColor === stringColorToCompare) {\n                    return this.prevBackgroundRange;\n                }\n                const now = performance.now();\n                // Only compute every 100ms\n                if (this.timePrevOp != null && now - this.timePrevOp < 100) {\n                    // Start a timeout of 100ms so that if the last update was cancelled, we'll still have a correct render\n                    this.throttleId = window.setTimeout(() => this.requestUpdate(), 100);\n                    return this.prevBackgroundRange;\n                }\n            }\n            const nbOfPoints = Math.round((this.max - this.min) / this.step);\n            const colorArray = new Uint8ClampedArray(nbOfPoints * 4);\n            for (let i = 0; i <= nbOfPoints; i++) {\n                // @ts-ignore\n                color[this.valueToModify] = i * this.step;\n                const rgb = color.rgb();\n                const position = 4 * i;\n                colorArray[position + 0] = rgb.r; // R value\n                colorArray[position + 1] = rgb.g; // G value\n                colorArray[position + 2] = rgb.b; // B value\n                colorArray[position + 3] = 255; // A value\n            }\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = nbOfPoints;\n            canvas.height = 1;\n            const imageData = new ImageData(colorArray, nbOfPoints, 1);\n            const ctx = canvas.getContext(\"2d\", { alpha: false });\n            ctx.putImageData(imageData, 0, 0);\n            const dataUrl = canvas.toDataURL();\n            this.prevBackgroundRange = dataUrl;\n            this.prevColor = stringColorToCompare;\n            this.timePrevOp = performance.now();\n            return dataUrl;\n        };\n    }\n    render() {\n        return html `<input\n      .min=${this.min}\n      .max=${this.max}\n      .step=${this.step}\n      .value=${this.value}\n      style=\"--track-background: url(${this.getBackgroundRange()})\"\n      type=\"range\"\n      @input=${(event) => {\n            const element = event.target;\n            const v = Number(element.value);\n            this.value = Number.isNaN(v) ? undefined : v;\n        }}\n    />`;\n    }\n};\nColorSlider.styles = css `\n    :host input[type=\"range\"] {\n      width: 100%;\n      margin: 0.5px 0;\n      background-color: transparent;\n      -webkit-appearance: none;\n    }\n\n    :host input[type=\"range\"]::-webkit-slider-runnable-track {\n      ${trackStyles}\n    }\n    :host input[type=\"range\"]::-moz-range-track {\n      ${trackStyles}\n    }\n\n    :host input[type=\"range\"]::-moz-range-thumb {\n      ${thumbStyles}\n    }\n    :host input[type=\"range\"]::-webkit-slider-thumb {\n      ${thumbStyles}\n      margin-top: -${offset}px;\n      -webkit-appearance: none;\n    }\n\n    :host input[type=\"range\"]:focus {\n      outline: none;\n    }\n\n    :host input[type=\"range\"]:hover::-moz-range-thumb {\n      background: #00000044;\n    }\n    :host input[type=\"range\"]:hover::-webkit-slider-thumb {\n      background: #00000044;\n    }\n    :host input[type=\"range\"]:focus-visible::-moz-range-thumb {\n      outline: -moz-mac-focusring auto 1px;\n      outline-offset: 1px;\n    }\n    :host input[type=\"range\"]:focus-visible::-webkit-slider-thumb {\n      outline: -webkit-focus-ring-color auto 1px;\n      outline-offset: 1px;\n    }\n  `;\n__decorate([\n    property({ type: Number, reflect: true })\n], ColorSlider.prototype, \"min\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], ColorSlider.prototype, \"max\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], ColorSlider.prototype, \"step\", void 0);\n__decorate([\n    property({ type: Number, reflect: true })\n], ColorSlider.prototype, \"value\", void 0);\n__decorate([\n    state()\n], ColorSlider.prototype, \"referenceColor\", void 0);\n__decorate([\n    state()\n], ColorSlider.prototype, \"valueToModify\", void 0);\nColorSlider = __decorate([\n    customElement(\"color-slider\")\n], ColorSlider);\nexport { ColorSlider };\n","export class ManateaController {\n    constructor(host, cup) {\n        this.host = host;\n        host.addController(this);\n        this.cup = cup;\n        // Update base component\n        this.listener = cup.on(() => this.host.requestUpdate());\n    }\n    hostDisconnected() {\n        // disconnect listener\n        this.listener();\n    }\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css } from \"lit\";\nimport { customElement, state } from \"lit/decorators.js\";\nimport \"./ColorSlider\";\nimport { aCup, bCup, blueCup, chromaCup, fakeHueCup, greenCup, hslCup, hueCup, labCup, lchCup, lightnessCup, luminanceCup, redCup, rgbCup, saturationCup, } from \"../color-controllers\";\nimport { ManateaController } from \"../manatea-controller\";\nfunction toHex(color) {\n    return Math.floor(color).toString(16).padStart(2, \"0\");\n}\nfunction toFixed(number, decimal = 2) {\n    const dec = 10 ** decimal;\n    return Math.round(number * dec) / dec;\n}\nconst view = window.matchMedia(\"(max-width: 595px)\");\nlet ColorPicker = class ColorPicker extends LitElement {\n    constructor() {\n        super();\n        // To auto update when the color changes\n        this.lchController = new ManateaController(this, lchCup);\n        this.isMobile = view.matches;\n        this.viewListener = (mqle) => {\n            this.isMobile = mqle.matches;\n        };\n        view.addListener(this.viewListener);\n    }\n    disconnectedCallback() {\n        view.removeListener(this.viewListener);\n    }\n    renderInput({ label, shortName = label[0].toUpperCase(), id = label[0], cup, min, max, step = 1, mod = (v) => v, unit = \"\", referenceColor, }) {\n        const clamp = (n) => Math.min(max, Math.max(min, n));\n        return html `\n      <label for=\"lab-${id}\">${shortName} (${label})</label>\n      <color-slider\n        .id=\"lab-${id}\"\n        .min=${min}\n        .max=${max}\n        .step=${step}\n        .value=${cup()}\n        .referenceColor=${referenceColor}\n        .valueToModify=${label[0]}\n        @input=${(event) => {\n            const element = event.target;\n            const value = clamp(element.value || 0);\n            element.value = value;\n            cup(value);\n        }}\n      ></color-slider>\n      <span\n        >${toFixed(mod(cup()), Math.floor(-Math.log(step) / Math.log(10)))}${unit}</span\n      >\n    `;\n    }\n    willUpdate(changed) {\n        const keys = new Set(changed.keys());\n        keys.delete(\"luminance\");\n        keys.delete(\"chroma\");\n        keys.delete(\"hue\");\n        // Only update if the update was related to LCH, otherwise no\n        if (keys.size === 0) {\n            lchCup();\n        }\n    }\n    render() {\n        const hexRGB = `#${toHex(redCup())}${toHex(greenCup())}${toHex(blueCup())}`;\n        return html `\n      <div class=\"wrapper\">\n        <details open>\n          <summary><h2>LCH</h2></summary>\n          <div class=\"group\">\n            ${this.renderInput({\n            label: \"luminance\",\n            cup: luminanceCup,\n            min: 0,\n            max: 100,\n            unit: \"º\",\n            referenceColor: lchCup(),\n        })}\n            ${this.renderInput({\n            label: \"chroma\",\n            cup: chromaCup,\n            min: 0,\n            max: 132,\n            referenceColor: lchCup(),\n        })}\n            ${this.renderInput({\n            label: \"hue\",\n            cup: hueCup,\n            min: 0,\n            max: 360,\n            referenceColor: lchCup(),\n        })}\n\n            <pre class=\"code-wrapper\"><code class=\"code\">LCH(${toFixed(luminanceCup())}% ${toFixed(chromaCup())} ${toFixed(hueCup())})</code></pre>\n          </div>\n        </details>\n\n        <details ?open=${!this.isMobile}>\n          <summary><h2>Lab</h2></summary>\n          <div class=\"group\">\n            ${this.renderInput({\n            label: \"luminance\",\n            cup: luminanceCup,\n            min: 0,\n            max: 100,\n            unit: \"º\",\n            id: \"L2\",\n            referenceColor: labCup(),\n        })}\n            ${this.renderInput({\n            label: \"a\",\n            shortName: \"a\",\n            cup: aCup,\n            min: -128,\n            max: 127,\n            referenceColor: labCup(),\n        })}\n            ${this.renderInput({\n            label: \"b\",\n            shortName: \"b\",\n            cup: bCup,\n            min: -128,\n            max: 127,\n            referenceColor: labCup(),\n        })}\n\n            <pre class=\"code-wrapper\"><code class='code'>Lab(${toFixed(luminanceCup())}% ${toFixed(aCup())} ${toFixed(bCup())})</code></pre>\n          </div>\n        </details>\n\n        <details ?open=${!this.isMobile}>\n          <summary><h2>RGB</h2></summary>\n          <div class=\"group\">\n            ${this.renderInput({\n            label: \"red\",\n            cup: redCup,\n            min: 0,\n            max: 255,\n            referenceColor: rgbCup(),\n        })}\n            ${this.renderInput({\n            label: \"green\",\n            cup: greenCup,\n            min: 0,\n            max: 255,\n            referenceColor: rgbCup(),\n        })}\n            ${this.renderInput({\n            label: \"blue\",\n            cup: blueCup,\n            min: 0,\n            max: 255,\n            referenceColor: rgbCup(),\n        })}\n\n            <pre class=\"code-wrapper\"><code class='code'>rgb(${toFixed(redCup())} ${toFixed(greenCup())} ${toFixed(blueCup())})</code>\n<code class='code'>${hexRGB}</code></pre>\n          </div>\n        </details>\n\n        <details ?open=${!this.isMobile}>\n          <summary><h2>HSL</h2></summary>\n          <div class=\"group\">\n            ${this.renderInput({\n            label: \"hue\",\n            cup: fakeHueCup,\n            min: 0,\n            max: 360,\n            referenceColor: hslCup(),\n        })}\n            ${this.renderInput({\n            label: \"saturation\",\n            cup: saturationCup,\n            min: 0,\n            step: 0.01,\n            max: 1,\n            mod: (v) => v * 100,\n            unit: \"%\",\n            referenceColor: hslCup(),\n        })}\n            ${this.renderInput({\n            label: \"lightness\",\n            cup: lightnessCup,\n            min: 0,\n            step: 0.01,\n            max: 1,\n            mod: (v) => v * 100,\n            unit: \"%\",\n            referenceColor: hslCup(),\n        })}\n            <pre class=\"code-wrapper\"><code class='code'>hsl(${toFixed(fakeHueCup())} ${toFixed(saturationCup()) * 100}% ${toFixed(lightnessCup() * 100)}%)</code></pre>\n          </div>\n        </details>\n      </div>\n    `;\n    }\n};\nColorPicker.styles = css `\n    :host label {\n      display: block;\n    }\n\n    :host .wrapper {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      row-gap: 1em;\n      column-gap: 2em;\n      margin-bottom: 1em;\n    }\n    @media (max-width: 595px) {\n      :host .wrapper {\n        grid-template-columns: 1fr;\n      }\n    }\n\n    :host .group {\n      display: grid;\n      grid-template-columns: 1fr 5ch;\n      grid-template-rows: repeat(6, auto) 1fr;\n      column-gap: 1em;\n      row-gap: 0.5em;\n\n      margin-top: 1em;\n    }\n\n    :host h2 {\n      display: inline-block;\n      margin: 0;\n    }\n\n    :host label {\n      grid-column: span 2;\n    }\n\n    :host color-slider {\n      /* Avoid making the page scroll on mobile when we are pressing on it */\n      touch-action: none;\n    }\n\n    :host .code-wrapper {\n      grid-column: span 2;\n    }\n    :host .code {\n      font-family: \"Fira Code\", monospace;\n    }\n  `;\n__decorate([\n    state()\n], ColorPicker.prototype, \"isMobile\", void 0);\nColorPicker = __decorate([\n    customElement(\"color-picker\")\n], ColorPicker);\nexport { ColorPicker };\n","import \"./LCHPaint/LCHPaint\";\nimport \"./ColorPicker/ColorPicker\";\nimport { rgbCup } from \"./color-controllers\";\ndocument.documentElement.style.backgroundColor = rgbCup().formatHex();\nrgbCup.on((tea) => {\n    document.documentElement.style.backgroundColor = tea.formatHex();\n});\n"],"names":["$81a53a836c61d399$export$357eb1b4f03c1402","$81a53a836c61d399$export$40339995e8a21591","$81a53a836c61d399$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","supportsAdoptingStyleSheets","window","ShadowRoot","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","constructionToken","Symbol","CSSResult","cssText","safeToken","undefined","_styleSheet","replaceSync","[object Object]","cssResultCache","Map","getCSSResult","result","get","set","css","strings","values","reduce","acc","v","idx","value","getCompatibleStyle","s","sheet","rule","cssRules","unsafeCSS","$e3bbd7fa9cbbf8bf$var$s","$e3bbd7fa9cbbf8bf$var$e","$e3bbd7fa9cbbf8bf$var$h","$e3bbd7fa9cbbf8bf$var$r","defaultConverter","type","Boolean","Array","stringify","fromValue","Number","e","notEqual","old","defaultPropertyDeclaration","attribute","String","converter","reflect","hasChanged","ReactiveElement","HTMLElement","super","this","initializer","_initializers","push","observedAttributes","finalize","t","elementProperties","forEach","p","attr","attributes","options","state","noAccessor","hasOwnProperty","key","getPropertyDescriptor","defineProperty","oldValue","name","requestUpdate","configurable","enumerable","finalized","superCtor","getPrototypeOf","Πm","props","properties","getOwnPropertyNames","getOwnPropertySymbols","t1","createProperty","elementStyles","finalizeStyles","styles","isArray","Set","flat","Infinity","reverse","unshift","$0cac0c825b1f70bd$export$11c8b4445f98b986","toLowerCase","__updatePromise","Promise","enableUpdating","__saveInstanceProperties","constructor","controller","__controllers","ΠU","renderRoot","isConnected","hostConnected","splice","indexOf","shadowRoot","attachShadow","shadowRootOptions","adoptedStyleSheets","map","styleSheet","style","document","createElement","textContent","appendChild","adoptStyles","createRenderRoot","c","__enableConnection","hostDisconnected","call","r","__attributeNameForProperty","Πp","attrValue","toAttribute","removeAttribute","propName","ctor","__reflectingProperty","getPropertyOptions","fromAttribute","n","_$changedProperties","__reflectingProperties","isUpdatePending","shouldRequestUpdate","__pendingConnectionPromise","performUpdate","reject","hasUpdated","__instanceProperties","shouldUpdate","changedProperties","willUpdate","hostUpdate","__markUpdated","_$didUpdate","_changedProperties","hostUpdated","i3","firstUpdated","updated","updateComplete","getUpdateComplete","k","__propertyToAttribute","Π$","$bf6af3cf1fd7ece2$var$t","$bf6af3cf1fd7ece2$var$i","$bf6af3cf1fd7ece2$var$s","$bf6af3cf1fd7ece2$var$e","$e3bbd7fa9cbbf8bf$export$b30baf7b91992075","globalThis","mode","reactiveElementVersions","trustedTypes","policy","createPolicy","createHTML","marker","Math","random","slice","markerMatch","nodeMarker","d","createMarker","createComment","isPrimitive","isIterable","iterator","textEndRegex","commentEndRegex","comment2EndRegex","tagEndRegex","singleQuoteAttrEndRegex","doubleQuoteAttrEndRegex","rawTextElement","tag","_$litType$","html","noChange","for","nothing","templateCache","WeakMap","walker","createTreeWalker","getTemplateHtml","l","attrNames","rawTextEndRegex","regex","attrName","match","attrNameEndIndex","lastIndex","exec","test","RegExp","end","startsWith","htmlResult","Template","node","nodeIndex","attrNameIndex","partCount","parts","el","currentNode","content","svgElement","firstChild","remove","append","childNodes","nextNode","nodeType","hasAttributes","attrsToRemove","getAttributeNames","endsWith","realName","statics","getAttribute","split","m","index","PropertyPart","BooleanAttributePart","EventPart","AttributePart","tagName","emptyScript","data","_options","innerHTML","resolveDirective","part","parent","attributeIndex","currentDirective","__directives","__directive","_$litDirective$","nextDirectiveConstructor","_$setDirectiveConnected","r1","_$initialize","e1","_$resolve","i2","fragment","creationScope","importNode","s1","o","partIndex","templatePart","i4","ChildPart","nextSibling","ElementPart","_parts","_$setValue","_$setChildPartConnected","parentNode","endNode","directiveParent","$bf6af3cf1fd7ece2$export$9f457b66e101538f","ref","B","insertBefore","i6","previousSibling","createTextNode","template","e2","_$committedValue","_$template","t4","TemplateInstance","_clone","i7","R","H","itemPart","s2","itemParts","item","_$endNode","start","from","element","s3","fill","change","l1","e4","h","o1","noCommit","setAttribute","newListener","s5","$bf6af3cf1fd7ece2$export$1b4c200bb93d5534","oldListener","capture","once","passive","shouldRemoveListener","removeEventListener","shouldAddListener","addEventListener","event","i8","s6","host","handleEvent","UpdatingElement","litHtmlPlatformSupport","litHtmlVersions","litElementVersions","$3949003343167766$var$i","$3949003343167766$var$a","LitElement","renderOptions","renderBefore","render","update","__childPart","container","partOwnerNode","_$litPart$","connectedCallback","setConnected","disconnectedCallback","$3949003343167766$export$cf8e90db1f38da15","$3949003343167766$var$o","litElementHydrateSupport","litElementPlatformSupport","$3949003343167766$var$n","customElement","classOrDescriptor","clazz","customElements","define","descriptor","kind","elements","standardProperty","placement","originalKey","property","protoOrDescriptor","legacyPrototypeMethod","decorateProperty","finisher","info","query","selector","cache","querySelector","t2","ElementProto","Element","msMatchesSelector","webkitMatchesSelector","factory","$7bebe0523553436c$export$46e35401bc090c62","definition","create","$8685f21e88998227$export$e4830c8e55b4f80d","$8685f21e88998227$var$reN","$8685f21e88998227$var$reP","$8685f21e88998227$var$reHex","$8685f21e88998227$var$reRgbInteger","$8685f21e88998227$var$reRgbPercent","$8685f21e88998227$var$reRgbaInteger","$8685f21e88998227$var$reRgbaPercent","$8685f21e88998227$var$reHslPercent","$8685f21e88998227$var$reHslaPercent","$8685f21e88998227$var$named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","$8685f21e88998227$var$color_formatHex","rgb","formatHex","$8685f21e88998227$var$color_formatRgb","formatRgb","format","trim","parseInt","$8685f21e88998227$var$rgbn","$8685f21e88998227$export$224ee6128901ddf4","$8685f21e88998227$var$rgba","$8685f21e88998227$var$hsla","NaN","g","b","a","$8685f21e88998227$export$7138c6bf7ee5608c","$8685f21e88998227$export$9099ad97b570f7c","opacity","$8685f21e88998227$export$1b3a2af3f3cd47f6","arguments","$8685f21e88998227$var$rgb_formatHex","$8685f21e88998227$var$hex","$8685f21e88998227$var$rgb_formatRgb","isNaN","max","min","round","toString","$8685f21e88998227$var$Hsl","$8685f21e88998227$export$8269f892f57a576a","$8685f21e88998227$export$1eaadac1dc277f81","$8685f21e88998227$var$hsl2rgb","m1","m2","$7bebe0523553436c$export$9099ad97b570f7c","copy","channels","assign","displayable","hex","formatHsl","brighter","pow","darker","$c611c0167c1a97ee$export$4e9ee150a765b792","PI","$c611c0167c1a97ee$export$7f0b4b375fd03518","$1e1f18e11d648d56$var$labConvert","$1e1f18e11d648d56$export$fb9af4e02c65b0dd","$1e1f18e11d648d56$export$8834968ad25c3945","$1e1f18e11d648d56$var$hcl2lab","x","z","$1e1f18e11d648d56$var$rgb2lrgb","y","$1e1f18e11d648d56$var$xyz2lab","$1e1f18e11d648d56$var$t1","$1e1f18e11d648d56$var$lab2xyz","$1e1f18e11d648d56$var$lrgb2rgb","$1e1f18e11d648d56$var$hclConvert","atan2","sqrt","$1e1f18e11d648d56$export$f1b729f5a196fa42","cos","sin","orderCup","firstTea","flavoring","handlers","flavoredTea","isPreviousCancelled","cancelled","setTea","teaRefill","context","flavoredTeaRefill","isCancelled","handler","cup","order","WeakSet","resolve","then","has","add","on","fn","server","delete","clear","$1e1f18e11d648d56$export$9099ad97b570f7c","$ff18be78db4524f8$var$initialLCHColor","$ff18be78db4524f8$var$initialLabColor","$ff18be78db4524f8$var$initialRGBColor","$ff18be78db4524f8$var$initialHSLColor","$ff18be78db4524f8$export$a01085967c46d382","$2cf354e1a006d8df$export$52560ccb88336cdf","tea","$ff18be78db4524f8$var$clamp","$ff18be78db4524f8$export$3024636b4b0c6b28","$ff18be78db4524f8$export$965ed80dcfd05d0d","$ff18be78db4524f8$export$95f9a6d3e85ef8fb","$ff18be78db4524f8$export$43fc8361ae832f9e","$ff18be78db4524f8$export$9b0bae227406d2aa","$ff18be78db4524f8$export$99f64a3cc89d6540","$ff18be78db4524f8$export$6e7bdda404e2b3d3","$ff18be78db4524f8$export$ecf247e5458ee42c","$ff18be78db4524f8$export$72a79d3ee82f181e","$ff18be78db4524f8$export$266877a4eb19af54","$ff18be78db4524f8$export$ffeeba1e81a1e0e3","$ff18be78db4524f8$export$b72e84d45503298c","$ff18be78db4524f8$export$2da8ef7bc0c2c5f1","$ff18be78db4524f8$export$d188bccd23acd505","number","$ff18be78db4524f8$var$genLCH","previousLCH","newColor","newLCH","$ff18be78db4524f8$var$genLab","previousLab","newLab","$ff18be78db4524f8$var$genRGB","previousRGB","newRGB","$ff18be78db4524f8$var$genHSL","previousHSL","newHSL","newLch","prevLab","prevRGB","prevHSL","prevLCH","newLuminance","newChroma","newHue","newA","newB","newRed","newGreen","newBlue","newSaturation","newLightness","$edbc3795ff77479a$var$url","$b7vW0","getBundleURL","module","exports","$8m5Fr","getOrigin","workerUrl","origin","isESM","self","location","source","URL","createObjectURL","Blob","$81891eb6c20a63e8$export$da289beea9c5b10d","$81891eb6c20a63e8$export$1b6c708f518305b4","$81891eb6c20a63e8$var$bundleURL","$81891eb6c20a63e8$var$getBaseURL","url","replace","err","matches","stack","$81891eb6c20a63e8$var$getBundleURL","$5650c0a283bfeaf0$export$6aa85d045b458f9b","prevWorker","hue","width","height","worker","Worker","terminate","res","onmessage","postMessage","$5c264c9ec5105cf8$var$__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","$5c264c9ec5105cf8$export$7d532f1b5d6773be","isPressed","generateColors","updateMarkerPosition","canvas","rect","getBoundingClientRect","floor","updateCanvasColors","ctx","getContext","colorArray","imageData","ImageData","putImageData","clientX","clientY","changed","$bf6af3cf1fd7ece2$export$91100b3ec196ccd","currentTarget","setPointerCapture","pointerId","onPositionChange","releasePointerCapture","eventOptions","$0cac0c825b1f70bd$export$ce8efb75507ffb31","$64731097e6eb27d4$export$f5e86181b8261eaa","$b18e94dcc77d35a3$export$7c233b474a5eb12b","$52a1a4b5f6177c24$export$95125093767365f","$32fb01fb1c09810d$var$__decorate","$32fb01fb1c09810d$var$thumbStyles","$32fb01fb1c09810d$var$height","$32fb01fb1c09810d$var$trackStyles","$32fb01fb1c09810d$export$4a8cf16343d6f05c","step","referenceColor","valueToModify","getBackgroundRange","clearTimeout","throttleId","color","colorToCompare","stringColorToCompare","prevBackgroundRange","prevColor","now","performance","timePrevOp","setTimeout","nbOfPoints","Uint8ClampedArray","position","alpha","dataUrl","toDataURL","$d59bd4c76f683ac0$export$c837a8b98c265ae3","$c3b09d6d5d91f579$export$b1264d1b352e73d","addController","listener","$02d267c51d77c057$var$__decorate","$02d267c51d77c057$var$toHex","padStart","$02d267c51d77c057$var$toFixed","decimal","dec","$02d267c51d77c057$var$view","matchMedia","$02d267c51d77c057$export$b0df26fdf780999a","lchController","isMobile","viewListener","mqle","addListener","removeListener","label","shortName","toUpperCase","mod","unit","log","size","hexRGB","renderInput","documentElement","backgroundColor"],"version":3,"file":"index.5d3d2397.js.map"}